package Lesson16_WrapperClasses;
import java.util.ArrayList;
/*
 * Wrapper классы в Java предоставляют удобный способ работать с примитивными типами данных,
 * такими как int, double, boolean и т.д., как с объектами.
 * Каждый примитивный тип данных имеет свой соответствующий класс-обертку:
 * Boolean для boolean
 * Byte для byte
 * Short для short
 * Integer для int
 * Long для long
 * Float для float
 * Double для double
 * Character для char
 *
 * Wrapper классы обычно используются в следующих случаях:
 * 1.Когда необходимо передать примитивный тип в качестве параметра метода, который ожидает объект.
 * В этом случае можно передать экземпляр соответствующего wrapper класса вместо примитивного значения.
 *
 * 2.Когда необходимо сохранить примитивный тип в коллекцию или другую структуру данных, которая требует объектов.
 * В этом случае необходимо использовать соответствующий wrapper класс.
 *
 * 3.Когда необходимо использовать методы, которые доступны только для объектов, например, метод toString().
 */
public class Main {
    public static void main(String[] args) {
        // Autoboxing - конвертация примитивных типов данных в соответсвующий wrapper class
        ArrayList <Integer> list = new ArrayList<>();
        list.add(5);
        // Unboxing - конвертаци объекта wrapper class в соответствующий примитивных тип данных
        int a = list.get(0);
        // Метод parse() конвертирует значение типа String в соответсвующий примитивный тип данных
        String s1 = "6";
        int a2 = Integer.parseInt(s1);

        // Метод valueOf() создает новый объект wrapper класса  того типа, на котором данный метод был вызван
        String s2 = "30";
        Integer i1 = Integer.valueOf(s2);
    }
}
